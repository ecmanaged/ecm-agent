#!/bin/bash

NAME=${NAME:-ecagentd}
TWISTD="$(which twistd)"
HOME=${DIR:-/opt/ecmanaged/ecagent}
PID_FILE=${PID_FILE:-"$HOME/twistd.pid"}
TAC=${TAC:-"$HOME/$NAME.tac"}
RETVAL=0

cd ${HOME}

getpid() {
    echo `cat $PID_FILE 2>/dev/null`
}

start() {
    if [ -f ${PID_FILE} ]; then
        PID=$(getpid)
        if [ -e /proc/${PID} -a /proc/${PID}/exe ]; then
            echo ${NAME} is already running: $PID
            exit 0;
        else
            rm  -f ${PID_FILE}
        fi
    fi

    echo -n $"Starting ${NAME}: "
    if getent passwd ecmanaged > /dev/null 2>&1; then
        $TWISTD --uid $(id -u ecmanaged) --gid $(id -g ecmanaged) -y $TAC 2>/dev/null
    else
        $TWISTD -y $TAC 2>/dev/null
    fi
    RETVAL=$?
    case "$RETVAL" in
        0) echo 'OK' ;;
        *) echo 'KO' ;;
    esac
}

stop() {
    if [ -f ${PID_FILE} ]; then
        PID=$(getpid)
        if [ -e /proc/${PID} -a /proc/${PID}/exe ]; then
            echo -n $"Stopping ${NAME}: "
            kill -TERM $PID
            RETVAL=$?

            # ensure that the agent process has stopped
            sleep 2
            if [ -e /proc/${PID} -a /proc/${PID}/exe ]; then
                kill -9 $PID
                RETVAL=$?
            fi
            case "$RETVAL" in
                0) echo 'OK' ;;
                *)  echo 'OK' ;;
            esac
        else
            echo -n $"removing stale pid file"
            rm -f ${PID_FILE}
            echo
        fi
    else
        echo -n $"${NAME}: is not running"
        echo
    fi
}

restart() {
    stop
    sleep 2
    start
}

zombies() {
    PID=$(getpid)
    for i in $(ps aux | awk '"[Zz]" ~ $8 { printf("%d\n", $2); }'); do
        if [ $i -eq ${PID} ]; then
            if [ $(ps --pid $PID -o etime= | sed 's/:\|-/ /g;' | awk '{print $4" "$3" "$2" "$1}' | \
                  awk '{print $1+$2*60+$3*3600+$4*86400}') > 300 ]; then
                restart
            fi
        fi
    done
}

status() {
    echo -n $"Checking status of ${NAME}: "
    PID=$(getpid)
    ls -l /proc/$PID/exe > /dev/null 2>&1
    case "$?" in
        0) zombies; echo 'OK' ;;
        *) echo 'KO' ;;
    esac
}

check() {
    echo -n $"Checking status of ${NAME}: "
    PID=$(getpid)
    ls -l /proc/$PID/exe > /dev/null 2>&1
    case "$?" in
        0) zombies; echo 'OK' ;;
        *) echo 'KO'; stop; sleep 2; start ;;
    esac
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    restart)
        restart
    ;;
    status)
        status twistd
    ;;
    check)
        check twistd
    ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status|check}"
        exit 1
esac

exit $RETVAL

